
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// Вставить содержимое обработчика.
	СуммаПоДокументу = СписокНоменклатуры.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр ОстаткиНоменклатуры Расход
	
	Движения.ОстаткиНоменклатуры.Записать();
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	// бЛОКИРОВКА
	Блокировка = Новый Блокировкаданных;
	Элемент = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	Элемент.ИсточникДанных = СписокНоменклатуры;
	Элемент.ИспользоватьИзИсточникаДанных("Номенклатура","Номенклатура");
	Элемент.Режим=РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Запрос = новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
	|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
	|ГДЕ
	|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Номенклатура КАК Номенклатура,
	|	вт.Количество КАК Количество,
	|	вт.Сумма КАК Сумма,
	|	ОстаткиНоменклатурыОстатки.Партия,
	|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	вт.Номенклатура.Представление КАК Представление
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				&МоментВремени,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						вт.Номенклатура
	|					ИЗ
	|						вт КАК вт)) КАК ОстаткиНоменклатурыОстатки
	|		ПО вт.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(Сумма),
	|	СУММА(КоличествоОстаток),
	|	СУММА(СуммаОстаток)
	|ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("МоментВремени",МоментВремени());
	
	выборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока выборкаИтоги.Следующий() Цикл
		Если выборкаИтоги.Количество> выборкаИтоги.КоличествоОстаток Тогда
			сообщение = Новый СообщениеПользователю;
			сообщение.Текст = "Нехватка номенклатуры "+выборкаИтоги.Представление + " в количестве "+(выборкаИтоги.Количество -  выборкаИтоги.КоличествоОстаток);
			сообщение.Сообщить();
			Отказ = Истина;
			Продолжить;
		КонецЕсли;
		
		Если не Отказ Тогда
			
			выборка = выборкаИтоги.Выбрать();
			
			ОсталосьСписать = выборкаИтоги.Количество;
			
			Пока выборка.Следующий() и Осталосьсписать<>0 Цикл
				
				Списать = МИН(выборка.КоличествоОстаток, ОсталосьСписать);
				
				Движение = Движения.ОстаткиНоменклатуры.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = выборка.Номенклатура;
				Движение.Партия = выборка.Партия;
				Движение.Количество = Списать;
				Движение.Сумма = (Списать/выборка.КоличествоОстаток)*выборка.СуммаОстаток;
				
				ОсталосьСписать = ОсталосьСписать - Списать;
				
				
			КонецЦикла;	
			
			Движения.Записать();
			
		КонецЕсли;
		
		
	КонецЦИКЛА;	
	
	
	Если не Отказ Тогда
		
		Движения.Взаиморасчеты.Записать();
		
		Движения.Взаиморасчеты.Записывать = Истина;
		
		// ВЗАИМОРАСЧЕТЫ
		Блокировка = Новый Блокировкаданных;
		Элемент = Блокировка.Добавить("РегистрНакопления.Взаиморасчеты");
		Элемент.УстановитьЗначение("Контрагент",Контрагент);
		Элемент.Режим=РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВзаиморасчетыОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.Взаиморасчеты.Остатки(
		|			&МоментВремени,
		|			Контрагент = &Контрагент
		|				И Партия = ЗНАЧЕНИЕ(Документ.расходнаяНакладная.ПустаяСсылка)) КАК ВзаиморасчетыОстатки"	;
		Запрос.УстановитьПараметр("МоментВремени",МоментВремени());
		Запрос.УстановитьПараметр("Контрагент",Контрагент);
		
		
		выборка = Запрос.Выполнить().Выбрать();
		Если выборка.Следующий() Тогда
			СуммаАванса = МИН(выборка.СуммаОстаток, СуммаПоДокументу);
			
			Если СуммаАванса<>0 Тогда
				
				Движение = Движения.Взаиморасчеты.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Партия = Документы.ПриходнаяНакладная.ПустаяСсылка();
				Движение.Контрагент = Контрагент;
				Движение.Сумма = СуммаАванса;
				
			КонецЕсли;	
			
			
			ОстатокСуммы = СуммаПоДокументу - СуммаАванса;
			Если ОстатокСуммы<>0 Тогда
				
				Движения.Взаиморасчеты.БлокироватьДляИзменения = Истина;
				
				Движение = Движения.Взаиморасчеты.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Контрагент = Контрагент;
				Движение.Партия = Ссылка;
				Движение.Сумма = ОстатокСуммы;
				
				Движения.Записать();
				
				
				// проверка на отрицательный остаток
				Запрос = новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ВзаиморасчетыОстатки.СуммаОстаток + ЕСТЬNULL(КредитСрезПоследних.Сумма, 0) КАК ОстатокСуммы
				|ИЗ
				|	РегистрНакопления.Взаиморасчеты.Остатки КАК ВзаиморасчетыОстатки
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Кредит.СрезПоследних(
				|				&МоментВремени,
				|				НАЧАЛОПЕРИОДА(Датакредита, ДЕНЬ) >= НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
				|					И Контрагент = &Контрагент) КАК КредитСрезПоследних
				|		ПО ВзаиморасчетыОстатки.Контрагент = КредитСрезПоследних.Контрагент
				|ГДЕ
				|	ВзаиморасчетыОстатки.СуммаОстаток + ЕСТЬNULL(КредитСрезПоследних.Сумма, 0) < 0";
				Запрос.УстановитьПараметр("МоментВремени",Новый Граница(МоментВремени(), видГраницы.Включая));
				Запрос.УстановитьПараметр("Дата",Дата);
				Запрос.УстановитьПараметр("Контрагент",Контрагент);
				
				Результат = Запрос.Выполнить();
				Если не Результат.Пустой() Тогда
					
					выборка = Результат.Выбрать();
					Если выборка.Следующий() Тогда
						
						сообщение = Новый СообщениеПользователю;
						сообщение.Текст = "Превышен предел кредита на "+(-выборка.ОстатокСуммы);
						сообщение.Сообщить();
						Отказ = Истина;
						
					КонецЕсли;
					
					
				КонецЕсли;	
				
				
			КонецЕсли;	
			
		КонецЕсли;
		
		
	КонецЕсли;	
	
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
